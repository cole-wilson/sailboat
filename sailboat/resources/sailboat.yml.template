# v0.1.2, workflow subs: [name: `{name}`, short_name: `{short_name}`, mac_comment: `{mac}`, windows_comment: `{windows}`, unix_comment: `{u}`, mac_extension: `{mac_ext}`, windows_extension: `{win_ext}`]
name: Publish release files for {name}.

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: Publish for ${{{{ matrix.os }}}}
    runs-on: ${{{{ matrix.os }}}}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_path: ./dist/pypi/*.whl
            asset_name: {short_name}-$tag-py3-none-any.whl
            glob: true

{windows}          - os: windows-latest
{windows}            artifact_path: .\dist\pyinstaller\{name}{win_ext}
{windows}            asset_name: {short_name}-$tag-windows64{win_ext}
{windows}            glob: false
{mac}          - os: macos-latest
{mac}            artifact_path: ./{name}.dmg
{mac}            asset_name: {short_name}-$tag-macos.dmg
{mac}            glob: false

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
    - name: Install Dependencies and Build
      run: |
        pip install sailboat
        python -m sailboat.actions
		- name: Check for prerelease
			run: python -m sailboat.prerelease ${{{{ github.ref }}}} >> $GITHUB_ENV
    - name: Upload binaries to prerelease
			if: env.prerel == 'true'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{{{ secrets.GITHUB_TOKEN }}}}
        file: ${{{{ matrix.artifact_path }}}}
        asset_name: ${{{{ matrix.asset_name }}}}
        tag: ${{{{ github.ref }}}}
        file_glob: ${{{{ matrix.glob }}}}
				body: ${{{{ github.event.head_commit.message }}}}
				prerelease: true
			
    - name: Upload binaries to production release
			if: env.prerel != 'true'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{{{ secrets.GITHUB_TOKEN }}}}
        file: ${{{{ matrix.artifact_path }}}}
        asset_name: ${{{{ matrix.asset_name }}}}
        tag: ${{{{ github.ref }}}}
        file_glob: ${{{{ matrix.glob }}}}
				body: ${{{{ github.event.head_commit.message }}}}
				prerelease: false